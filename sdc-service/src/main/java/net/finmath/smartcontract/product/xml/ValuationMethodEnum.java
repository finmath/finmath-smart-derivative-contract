//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.03.27 at 10:23:13 AM CEST 
//


package net.finmath.smartcontract.product.xml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ValuationMethodEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="ValuationMethodEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="Market"/&gt;
 *     &lt;enumeration value="Highest"/&gt;
 *     &lt;enumeration value="AverageMarket"/&gt;
 *     &lt;enumeration value="AverageHighest"/&gt;
 *     &lt;enumeration value="BlendedMarket"/&gt;
 *     &lt;enumeration value="BlendedHighest"/&gt;
 *     &lt;enumeration value="AverageBlendedMarket"/&gt;
 *     &lt;enumeration value="AverageBlendedHighest"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "ValuationMethodEnum")
@XmlEnum
public enum ValuationMethodEnum {

    @XmlEnumValue("Market")
    MARKET("Market"),
    @XmlEnumValue("Highest")
    HIGHEST("Highest"),
    @XmlEnumValue("AverageMarket")
    AVERAGE_MARKET("AverageMarket"),
    @XmlEnumValue("AverageHighest")
    AVERAGE_HIGHEST("AverageHighest"),
    @XmlEnumValue("BlendedMarket")
    BLENDED_MARKET("BlendedMarket"),
    @XmlEnumValue("BlendedHighest")
    BLENDED_HIGHEST("BlendedHighest"),
    @XmlEnumValue("AverageBlendedMarket")
    AVERAGE_BLENDED_MARKET("AverageBlendedMarket"),
    @XmlEnumValue("AverageBlendedHighest")
    AVERAGE_BLENDED_HIGHEST("AverageBlendedHighest");
    private final String value;

    ValuationMethodEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ValuationMethodEnum fromValue(String v) {
        for (ValuationMethodEnum c: ValuationMethodEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
